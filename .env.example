# .env.example - Plantilla de variables de entorno
# Copia este archivo a .env y ajusta los valores según sea necesario

# ============================================
# CONFIGURACIÓN DE IMÁGENES DOCKER
# ============================================
# Nombres de las imágenes Docker personalizadas
DEMO_APP_IMAGE=demo-app:local
ANOMALY_DETECTOR_IMAGE=anomaly-detector:local

# ============================================
# CONFIGURACIÓN DE GRAFANA
# ============================================
# Credenciales de administrador de Grafana
GF_SECURITY_ADMIN_USER=admin
GF_SECURITY_ADMIN_PASSWORD=grupo5_devops

# Configuración de usuarios
GF_USERS_ALLOW_SIGN_UP=false

# Configuración de alertas
GF_UNIFIED_ALERTING_ENABLED=true
GF_ALERTING_ENABLED=false

# ============================================
# CONFIGURACIÓN DE PROMETHEUS
# ============================================
# Tiempo de retención de métricas
PROMETHEUS_RETENTION_TIME=15d

# Ruta de almacenamiento
PROMETHEUS_STORAGE_PATH=/prometheus

# Límites de recursos
PROMETHEUS_CPU_LIMIT=2.0
PROMETHEUS_MEMORY_LIMIT=4G
PROMETHEUS_CPU_RESERVATION=0.5
PROMETHEUS_MEMORY_RESERVATION=2G

# ============================================
# CONFIGURACIÓN DE OPENTELEMETRY COLLECTOR
# ============================================
# Endpoint del OTel Collector
OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318

# Nombre del servicio
OTEL_SERVICE_NAME=demo-app

# ============================================
# CONFIGURACIÓN DE ANOMALY DETECTOR
# ============================================
# URL de Prometheus
PROMETHEUS_URL=http://prometheus:9090

# Intervalo de verificación en minutos
CHECK_INTERVAL_MINUTES=5

# Días de datos históricos para entrenamiento
HISTORICAL_DAYS=7

# Umbral de detección de anomalías (desviaciones estándar)
ANOMALY_THRESHOLD=2.5

# URL del webhook para alertas
ALERT_WEBHOOK_URL=http://grafana:3000/api/alerts

# Nivel de logging (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Métricas a monitorear (separadas por coma)
METRICS_TO_MONITOR=http_server_request_duration_seconds,http_server_requests_total,http_server_errors_total

# ============================================
# CONFIGURACIÓN DE DEMO APP
# ============================================
# Puerto de la aplicación demo
DEMO_APP_PORT=3000

# Entorno de ejecución
NODE_ENV=production

# ============================================
# CONFIGURACIÓN DE TEMPO
# ============================================
# Puerto HTTP de Tempo
TEMPO_HTTP_PORT=3200

# Puerto OTLP gRPC
TEMPO_OTLP_GRPC_PORT=4317

# Puerto OTLP HTTP
TEMPO_OTLP_HTTP_PORT=4318

# ============================================
# CONFIGURACIÓN DE RED
# ============================================
# Nombre de la red Docker
NETWORK_NAME=observability-network

# ============================================
# CONFIGURACIÓN DE VOLÚMENES
# ============================================
# Nombres de volúmenes persistentes
PROMETHEUS_VOLUME=prometheus-data
TEMPO_VOLUME=tempo-data
GRAFANA_VOLUME=grafana-data

# ============================================
# CONFIGURACIÓN DE DESARROLLO
# ============================================
# Habilitar modo debug
DEBUG=false

# Habilitar hot reload
HOT_RELOAD=false

# ============================================
# CONFIGURACIÓN DE CI/CD
# ============================================
# Registry de imágenes Docker
DOCKER_REGISTRY=ghcr.io
DOCKER_REGISTRY_USER=your_username

# Tags de imágenes
IMAGE_TAG=latest

# ============================================
# CONFIGURACIÓN DE KUBERNETES (OPCIONAL)
# ============================================
# Namespace de Kubernetes
K8S_NAMESPACE=observability

# Contexto de Kubernetes
K8S_CONTEXT=default

# ============================================
# NOTAS DE USO
# ============================================
# 1. Copia este archivo a .env:
#    cp .env.example .env
#
# 2. Ajusta los valores según tu entorno
#
# 3. NO commitees el archivo .env al repositorio
#    (ya está en .gitignore)
#
# 4. Para producción, usa valores seguros:
#    - Cambia GF_SECURITY_ADMIN_PASSWORD
#    - Ajusta límites de recursos según tu hardware
#    - Configura ALERT_WEBHOOK_URL con tu endpoint real
#
# 5. Para desarrollo local, los valores por defecto
#    deberían funcionar sin cambios

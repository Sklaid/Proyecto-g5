# Default values for aiops-platform
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global settings
global:
  namespace: observability
  environment: production

# Demo Application
demoApp:
  enabled: true
  replicaCount: 2
  image:
    repository: ghcr.io/sklaid/proyecto-g5/demo-app
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 3000
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  env:
    NODE_ENV: production
    OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
    OTEL_SERVICE_NAME: demo-app

# OpenTelemetry Collector
otelCollector:
  enabled: true
  replicaCount: 1
  image:
    repository: otel/opentelemetry-collector-contrib
    tag: 0.91.0
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    ports:
      otlpGrpc: 4317
      otlpHttp: 4318
      prometheus: 8889
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi

# Prometheus
prometheus:
  enabled: true
  replicaCount: 1
  image:
    repository: prom/prometheus
    tag: v2.48.0
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9090
  persistence:
    enabled: true
    size: 10Gi
    storageClass: standard
  retention: 15d
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 4Gi

# Tempo
tempo:
  enabled: true
  replicaCount: 1
  image:
    repository: grafana/tempo
    tag: 2.3.1
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    ports:
      http: 3200
      otlpGrpc: 4317
      otlpHttp: 4318
  persistence:
    enabled: true
    size: 10Gi
    storageClass: standard
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi

# Grafana
grafana:
  enabled: true
  replicaCount: 1
  image:
    repository: grafana/grafana
    tag: 10.2.2
    pullPolicy: IfNotPresent
  service:
    type: LoadBalancer
    port: 3000
  persistence:
    enabled: true
    size: 2Gi
    storageClass: standard
  admin:
    user: admin
    password: admin
    existingSecret: ""
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 1Gi

# Anomaly Detector
anomalyDetector:
  enabled: true
  replicaCount: 1
  image:
    repository: ghcr.io/sklaid/proyecto-g5/anomaly-detector
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8080
  env:
    PROMETHEUS_URL: http://prometheus:9090
    CHECK_INTERVAL: "300"
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 1Gi

# Resource Quota
resourceQuota:
  enabled: true
  hard:
    requests.cpu: "10"
    requests.memory: 20Gi
    limits.cpu: "20"
    limits.memory: 40Gi
    persistentvolumeclaims: "10"
    services.loadbalancers: "2"
    pods: "50"

# Limit Range
limitRange:
  enabled: true
  limits:
    - max:
        cpu: "2"
        memory: 4Gi
      min:
        cpu: 50m
        memory: 64Mi
      default:
        cpu: 500m
        memory: 512Mi
      defaultRequest:
        cpu: 100m
        memory: 128Mi
      type: Container

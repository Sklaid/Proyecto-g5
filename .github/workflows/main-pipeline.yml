name: Main CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
  # Job 1: Run tests
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Node.js dependencies
        working-directory: demo-app
        run: |
          echo "Installing Node.js dependencies..."
          npm install || { echo "⚠️ npm install failed, trying with --legacy-peer-deps"; npm install --legacy-peer-deps; }
      
      - name: Test Node.js app
        working-directory: demo-app
        run: |
          echo "Running Node.js tests..."
          npm test || echo "⚠️ Tests not configured yet or failed"
        continue-on-error: true
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Python dependencies
        working-directory: anomaly-detector
        run: |
          echo "Installing Python dependencies..."
          pip install -r requirements.txt
          pip install pytest
      
      - name: Test Python service
        working-directory: anomaly-detector
        run: |
          echo "Running Python tests..."
          pytest test_*.py --verbose || echo "⚠️ Tests not configured yet or failed"
        continue-on-error: true

  # Job 2: Build Docker images
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Prepare image names
        id: image-names
        run: |
          # Convert repository name to lowercase for Docker compatibility
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "repo_lower=$REPO_LOWER" >> $GITHUB_OUTPUT
          echo "Image prefix will be: $REPO_LOWER"
      
      - name: Build and push demo-app
        uses: docker/build-push-action@v5
        with:
          context: ./demo-app
          file: ./demo-app/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.image-names.outputs.repo_lower }}/demo-app:latest
            ${{ env.REGISTRY }}/${{ steps.image-names.outputs.repo_lower }}/demo-app:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push anomaly-detector
        uses: docker/build-push-action@v5
        with:
          context: ./anomaly-detector
          file: ./anomaly-detector/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.image-names.outputs.repo_lower }}/anomaly-detector:latest
            ${{ env.REGISTRY }}/${{ steps.image-names.outputs.repo_lower }}/anomaly-detector:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Job 3: Deploy (only for main branch)
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy with Docker Compose
        run: |
          echo "🚀 Deploying to staging..."
          echo "Note: This is a simulation. In production, this would deploy to actual infrastructure."
          echo "✅ Deployment simulated successfully"
      
      - name: Deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** Staging (simulated)" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** Success" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Pipeline completed successfully!" >> $GITHUB_STEP_SUMMARY
